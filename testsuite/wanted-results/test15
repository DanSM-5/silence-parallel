### Test -p --interactive
spawn /tmp/parallel-script-for-expect
echo opt-p 1 ?...y
echo opt-p 2 ?...n
echo opt-p 3 ?...y
opt-p 1
opt-p 3
echo opt--interactive 1 ?...y
echo opt--interactive 2 ?...n
echo opt--interactive 3 ?...y
opt--interactive 1
opt--interactive 3
### Test -L -l and --max-lines
a_b c
a_b c
a_b c
a_b
c
a_b
c
a_b
c
a_b c
d
a_b c
d
a_b c
d
a_b c d
e
a_b c d
e
a_b c d
e
a_b c
d
e
a_b c
d
e
a_b c
d
e
a_b c d
e
a_b c d
e
a_b c d
e
a_b c
d
e
a_b c
d
e
a_b c
d
e
a_b c d
e
a_b c d
e
a_b c d
e
a_b c
d
e
a_b c
d
e
a_b c
d
e
### test too long args
Command line too long (1000005 >= 131071) at number 1: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...
xargs: argument line too long
1 2
3 4
5 6
7 8
Command line too long (1000007 >= 10) at number 1: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...
9 10
1 2
3 4
5 6
7 8
xargs: argument line too long
9 10
1 2
3 4
5 6
7 8
Command line too long (1000007 >= 10) at number 1: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...
9 10
### Test -x
1 2
3 4
5 6
Command line too long (15 >= 10) at number 3: 12345...
7 8
1 2
3 4
5 6
Command line too long (15 >= 10) at number 3: 12345...
7 8
1 2
3 4
5 6
xargs: argument line too long
7 8
1 2
3 4
5 6
7 8
9 10
1234
12
13
14
15
1 2
3 4
5 6
7 8
9 10
1234
12
13
14
15
1 2
3 4
5 6
7 8
9 10
1234
12
13
14
15
### Test bugfix if no command given
Command line too long (1000002 >= 10) at number 1: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz...
1 2 3 4 5
### Test -a and --arg-file: Read input from file instead of stdin
1
2
3
4
5
6
7
8
9
10
1
2
3
4
5
6
7
8
9
10
xargs Expect: 3 1 2
3
1
2
parallel Expect: 3 1 via psedotty  2
3
1
via pseudotty
2
xargs Expect: 1 3 2
1
3
2
parallel Expect: 1 3 2 via pseudotty
1
3
2
via pseudotty
### Test -i and --replace: Replace with argument
replace
replace
replace
replace
replace
replace
replace
replace
replace
### Test -E: Artificial end-of-file
include this
include this
### Test -e and --eof: Artificial end-of-file
include this
include this
include this
include this
### Test -n and --max-args: Max number of args per line (only with -X and -m)
line 1
line 2
line 3
line 1 line 1
line 2
line 1
line 2
line 3
line 1 line 1
line 2
line 1
line 2
line 3
line 1 line 1
line 2
line 1
line 2
line 3
line 1
line 2
line 3
line 1 line 1
line 2
line 1 line 1
line 2
line 1
line 2
line 3
line 1 line 1
line 2
### Test --max-procs and -P: Number of processes
max proc 1
max proc 2
max proc 3
max proc 4
max proc 5
max proc 6
max proc 7
max proc 8
max proc 9
max proc 10
200% proc 1
200% proc 2
200% proc 3
200% proc 4
200% proc 5
200% proc 6
200% proc 7
200% proc 8
200% proc 9
200% proc 10
### Test --delimiter and -d: Delimiter instead of newline
# Yes there is supposed to be an extra newline for -d N
This is line 1
This is line 2
This is line 3

This is line 1
This is line 2
This is line 3

delimiter NUL line 1
line 2
line 3
delimiter TAB line 1
line 2
line 3
### Hans found a bug giving unitialized variable
gzip /tmp/parallel_f1
gzip /tmp/parallel_f2'
'
### Test --max-chars and -s: Max number of chars in a line
line 1 line 1
line 2
line 1 line 1
line 2
### Test --no-run-if-empty and -r: This should give no output
### Test --help and -h: Help output (just check we get the same amount of lines)
Output from -h and --help
6
6
### Test --version: Version output (just check we get the same amount of lines)
7
### Test --verbose and -t
echo bar
echo car
echo far
echo bar
echo car
echo far
### Test --show-limits
Maximal size of command: 131071
Maximal used size of command: 131071

Execution of  will continue now, and it will try to read its input
and run commands; if this is not what you wanted to happen, please
press CTRL-D or CTRL-C
bar
car
far
Maximal size of command: 131071
Maximal used size of command: 100

Execution of  will continue now, and it will try to read its input
and run commands; if this is not what you wanted to happen, please
press CTRL-D or CTRL-C
bar car far
