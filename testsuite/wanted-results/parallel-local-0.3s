echo '### Test exit val - true';   echo true | parallel;   echo $?
### Test exit val - true
0
echo '**'
**
echo '### Test exit val - false';   echo false | parallel;   echo $?
### Test exit val - false
1
echo '**'
**
echo '### Test bug #43284: {%} and {#} with --xapply';   parallel --xapply 'echo {1} {#} {%} {2}' ::: a ::: b;   parallel -N2 'echo {%}' ::: a b
### Test bug #43284: {%} and {#} with --xapply
a 1 1 b
1
echo '**'
**
echo '### Test bug #43376: {%} and {#} with --pipe'
### Test bug #43376: {%} and {#} with --pipe
  echo foo | parallel -q --pipe -k echo {#}
1
  echo foo | parallel --pipe -k echo {%}
1
  echo foo | parallel -q --pipe -k echo {%}
1
  echo foo | parallel --pipe -k echo {#}
1
echo '**'
**
echo '### {= and =} in different groups separated by space'
### {= and =} in different groups separated by space
  parallel echo {= s/a/b/ =} ::: a
b
  parallel echo {= s/a/b/=} ::: a
b
  parallel echo {= s/a/b/=}{= s/a/b/=} ::: a
bb
  parallel echo {= s/a/b/=}{=s/a/b/=} ::: a
bb
  parallel echo {= s/a/b/=}{= {= s/a/b/=} ::: a
b{= b
  parallel echo {= s/a/b/=}{={=s/a/b/=} ::: a
b{=b
  parallel echo {= s/a/b/ =} {={==} ::: a
b {=a
  parallel echo {={= =} ::: a
{=a
  parallel echo {= {= =} ::: a
{= a
  parallel echo {= {= =} =} ::: a
{= a =}
echo '**'
**
echo '### {} as part of the command'
### {} as part of the command
  echo p /bin/ls | parallel l{= s/p/s/ =}
/bin/ls
  echo /bin/ls-p | parallel --colsep '-' l{=2 s/p/s/ =} {1}
/bin/ls
  echo s /bin/ls | parallel l{}
/bin/ls
  echo /bin/ls | parallel ls {}
/bin/ls
  echo ls /bin/ls | parallel {}
/bin/ls
  echo ls /bin/ls | parallel
/bin/ls
echo '**'
**
echo '### bug #43817: Some JP char cause problems in positional replacement strings'
### bug #43817: Some JP char cause problems in positional replacement strings
  parallel -k echo ::: '�<�>' '�<1 $_=2�>' 'ワ'
�<�>
�<1 $_=2�>
ワ
  parallel -k echo {1} ::: '�<�>' '�<1 $_=2�>' 'ワ'
�<�>
�<1 $_=2�>
ワ
  parallel -Xj1 echo ::: '�<�>' '�<1 $_=2�>' 'ワ'
�<�> �<1 $_=2�> ワ
  parallel -Xj1 echo {1} ::: '�<�>' '�<1 $_=2�>' 'ワ'
�<�>
echo '**'
**
echo '### --rpl % that is a substring of longer --rpl %D'
### --rpl % that is a substring of longer --rpl %D
parallel --plus --rpl '%'   --rpl '%D $_=::shell_quote(::dirname($_));' --rpl '%B s:.*/::;s:\.[^/.]+$::;' --rpl '%E s:.*\.::'   'echo {}=%;echo %D={//};echo %B={/.};echo %E={+.};echo %D/%B.%E={}' ::: a.b/c.d/e.f
a.b/c.d/e.f=a.b/c.d/e.f
a.b/c.d=a.b/c.d
e=e
f=f
a.b/c.d/e.f=a.b/c.d/e.f
echo '**'
**
echo '### Disk full'
### Disk full
cat /dev/zero >/mnt/ram/out;   parallel --tmpdir /mnt/ram echo ::: OK;   rm /mnt/ram/out
cat: write error: No space left on device
parallel: Error: Output is incomplete. Cannot append to buffer file in /mnt/ram. Is the disk full?
parallel: Error: Change $TMPDIR with --tmpdir or use --compress.
echo '**'
**
echo '### bug #44546: If --compress-program fails: fail'
### bug #44546: If --compress-program fails: fail
  parallel --line-buffer --compress-program false echo \;ls ::: /no-existing; echo $?
1
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
  parallel --tag --line-buffer --compress-program false echo \;ls ::: /no-existing; echo $?
1
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
  (parallel --files --tag --line-buffer --compress-program false echo \;sleep 1\;ls ::: /no-existing; echo $?) | tail -n1
1
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
  parallel --tag --compress-program false echo \;ls ::: /no-existing; echo $?
1
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
  parallel --line-buffer --compress-program false echo \;ls ::: /no-existing; echo $?
1
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
  parallel --compress-program false echo \;ls ::: /no-existing; echo $?
1
parallel: Error: false -dc failed.
parallel: Error: false -dc failed.
echo '### bug #44614: --pipepart --header off by one'
### bug #44614: --pipepart --header off by one
  seq 10 >/tmp/parallel_44616;     parallel --pipepart -a /tmp/parallel_44616 -k --block 5 'echo foo; cat';     parallel --pipepart -a /tmp/parallel_44616 -k --block 2 --regexp --recend 3'\n' 'echo foo; cat';     rm /tmp/parallel_44616
foo
1
2
3
foo
4
5
6
foo
7
8
9
foo
10
foo
1
2
3
foo
4
5
6
7
8
9
10
echo '### TMUX not found'
### TMUX not found
  TMUX=not-existing parallel --tmux echo ::: 1
parallel: Error: not-existing not found in $PATH.
