### Test --transfer --return --cleanup - files with newline
### --transfer - file with newline
newline
newline
good if no file
ls: tmp/parallel.file*: No such file or directory
ls: tmp/parallel.file*: No such file or directory
### --transfer --cleanup - file with newline
newline
newline
good if no file
ls: tmp/parallel.file*: No such file or directory
ls: tmp/parallel.file*: No such file or directory
### --return - file with newline
tmp/parallel.file.
newline1.out
tmp/parallel.file.
newline2.out
### --return --cleanup - file with newline
tmp/parallel.file.
newline1.out
tmp/parallel.file.
newline2.out
good if no file
ls: tmp/parallel.file*: No such file or directory
OK
ls: tmp/parallel.file*: No such file or directory
OK
### --transfer --return --cleanup - file with newline
tmp/parallel.file.
newline1.out
tmp/parallel.file.
newline2.out
good if no file
ls: tmp/parallel.file*: No such file or directory
OK
ls: tmp/parallel.file*: No such file or directory
OK
### --trc - file with newline
tmp/parallel.file.
newline1.out
tmp/parallel.file.
newline2.out
good if no file
ls: tmp/parallel.file*: No such file or directory
OK
ls: tmp/parallel.file*: No such file or directory
OK
### --trc - multiple file with newline
tmp/parallel.file.
newline1.out
tmp/parallel.file.
newline1.out2
tmp/parallel.file.
newline2.out
tmp/parallel.file.
newline2.out2
good if no file
ls: tmp/parallel.file*: No such file or directory
OK
ls: tmp/parallel.file*: No such file or directory
OK
### Test use special ssh
tmp/parallel.file.
newline1.out
tmp/parallel.file.
newline1.out2
tmp/parallel.file.
newline2.out
tmp/parallel.file.
newline2.out2
good if no file
ls: tmp/parallel.file*: No such file or directory
OK
ls: tmp/parallel.file*: No such file or directory
OK
Input for ssh
-l parallel parallel-server1 rsync --server -lDrRze.iLsf . .
parallel@parallel-server1 eval `echo $SHELL | grep -E "/(t)?csh" > /dev/null  && echo setenv PARALLEL_SEQ 2\;  setenv PARALLEL_PID 00000  || echo PARALLEL_SEQ=2\;export PARALLEL_SEQ\;  PARALLEL_PID=00000\;export PARALLEL_PID` ; cat tmp/parallel.file.'
'newline2 > tmp/parallel.file.'
'newline2.out;cat tmp/parallel.file.'
'newline2 > tmp/parallel.file.'
'newline2.out2
-l parallel parallel-server1 cd ./tmp; rsync --server --sender -lDrRze.iLsf . parallel.file.'
'newline2.out
-l parallel parallel-server1 cd ./tmp; rsync --server --sender -lDrRze.iLsf . parallel.file.'
'newline2.out2
parallel@parallel-server1 rm -f ./tmp/parallel.file.'
'newline2;rmdir 2>/dev/null ./tmp;rm -f ./tmp/parallel.file.'
'newline2.out;rmdir 2>/dev/null ./tmp;rm -f ./tmp/parallel.file.'
'newline2.out2;rmdir 2>/dev/null ./tmp;
-l parallel parallel-server2 rsync --server -lDrRze.iLsf . .
parallel@parallel-server2 eval `echo $SHELL | grep -E "/(t)?csh" > /dev/null  && echo setenv PARALLEL_SEQ 1\;  setenv PARALLEL_PID 00000  || echo PARALLEL_SEQ=1\;export PARALLEL_SEQ\;  PARALLEL_PID=00000\;export PARALLEL_PID` ; cat tmp/parallel.file.'
'newline1 > tmp/parallel.file.'
'newline1.out;cat tmp/parallel.file.'
'newline1 > tmp/parallel.file.'
'newline1.out2
-l parallel parallel-server2 cd ./tmp; rsync --server --sender -lDrRze.iLsf . parallel.file.'
'newline1.out
-l parallel parallel-server2 cd ./tmp; rsync --server --sender -lDrRze.iLsf . parallel.file.'
'newline1.out2
parallel@parallel-server2 rm -f ./tmp/parallel.file.'
'newline1;rmdir 2>/dev/null ./tmp;rm -f ./tmp/parallel.file.'
'newline1.out;rmdir 2>/dev/null ./tmp;rm -f ./tmp/parallel.file.'
'newline1.out2;rmdir 2>/dev/null ./tmp;
