gnuparallel : Simple loading of GNU parallel result files.

The gnuparallel package provides a single function, `load`, which
loads results from files generated by GNU parallel into a Pandas
DataFrame object. See `help(gnuparallel.load)` for details.

Installation:

    # python setup.py install

Sample usage:

1. Generate some results files by running parallel from the command line:

    # mkdir outdir
    # parallel --results outdir/ echo {arg1} {arg2} ::: arg1 1 2 ::: arg2 three four

2. Load the results using the gnuparallel Python package:

    # python
    Python 2.7.3 (default, Apr 24 2012, 00:00:54) 
    [GCC 4.7.0 20120414 (prerelease)] on linux2
    Type "help", "copyright", "credits" or "license" for more information.
    >>> import gnuparallel
    >>> help(gnuparallel.load)
    >>> myresults = gnuparallel.load('outdir')
    >>> myresults
          1      2  _prefix _stream                              resfile
    0     2   four      NaN  stdout     outdir/stdout\t1\t2\t2\tfour
    1     2  three      NaN  stdout     outdir/stdout\t1\t2\t2\tthree
    2     2   arg2      NaN  stdout     outdir/stdout\t1\t2\t2\targ2
    3     1   four      NaN  stdout     outdir/stdout\t1\t1\t2\tfour
    4     1  three      NaN  stdout     outdir/stdout\t1\t1\t2\tthree
    5     1   arg2      NaN  stdout     outdir/stdout\t1\t1\t2\targ2
    6  arg1   four      NaN  stdout     outdir/stdout\t1\targ1\t2\tfour
    7  arg1  three      NaN  stdout     outdir/stdout\t1\targ1\t2\tthree
    8  arg1   arg2      NaN  stdout     outdir/stdout\t1\targ1\t2\targ2

See documentation for the pandas project (http://pandas.pydata.org/) for
instructions on how to access and manipulate the loaded results.
