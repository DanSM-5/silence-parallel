= Notes on how to release new version =

== alpha/beta/production ==

Check that documentation is updated (compare to web):

Fixet for 20170322
git diff last-release-commit
Unmodified beta since last version => production
Unmodified alpha since last version => beta
Modified => alpha

== Update version ==

configure.ac: AC_INIT([parallel], [20100422], [bug-parallel@gnu.org])
src/parallel: $Global::version = 20100422;
README: parallel-20130222

YYYYMMDD=$(echo `yyyymmdd`+1 | bc)
YYYYMMDD=`yyyymmdd`
echo $YYYYMMDD
perl -i -pe "s/20\d\d\d\d\d\d/$YYYYMMDD/" configure.ac
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/parallel
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/sql
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/niceload
perl -i -pe "s/parallel-20\d\d\d\d\d\d/parallel-$YYYYMMDD/" README

=== Autoconf/automake ===

rm -fr autom4te.cache aclocal.m4 config.h config.h.in config.log Makefile.in missing install-sh
rm -rf src/Makefile.in
autoreconf --install -W gnu
./configure
make -j && sudo make install

== Testsuite ==

cd testsuite; make mem; make

== Update NEWS ==

With the same things that goes in the announce mail

== Package ==

./configure
make dist
make dist-bzip2

== Test the package ==

YYYYMMDD=`yyyymmdd`
cp parallel-$YYYYMMDD.tar.bz2 /tmp
pushd /tmp
tar xjvf parallel-$YYYYMMDD.tar.bz2
cd parallel-$YYYYMMDD
./configure && make -j && sudo make -j install
pushd

== Upload ==

YYYYMMDD=`yyyymmdd`
export YYYYMMDD
eval `gpg-agent --daemon`
# Takes up to 8 minutes
make upload

# Only needed for alpha:
YYYYMMDD=`yyyymmdd`
export YYYYMMDD
eval `gpg-agent --daemon`
# Takes up to 8 minutes
make alphaupload

== Update OpenSUSE build system ==

cd ~/privat/parallel/packager/obs
# Update version number
em home:tange/parallel/parallel.spec

find home:tange/parallel/* -type f | grep -v parallel.spec | parallel -Xj1 osc rm {}
# This should not create new files
osc up home:tange/parallel/
make
# Reload build-status:
https://build.opensuse.org/package/show?package=parallel&project=home%3Atange
# Check that one .deb (Debian 5.0) and one .rpm (CentOS) end with 'succeeded'

== Download and test ==

# Only needed for alpha (part of 'make upload')

YYYYMMDD=`yyyymmdd`
pushd /tmp
rm -rf parallel-${YYYYMMDD}*
# This can take 7 minutes
#while ! wget http://ftp.gnu.org/gnu/parallel/parallel-$YYYYMMDD.tar.bz2 ; do sleep 2; done
while ! wget http://alpha.gnu.org/gnu/parallel/parallel-$YYYYMMDD.tar.bz2 ; do sleep 2; done
tar xjvf parallel-$YYYYMMDD.tar.bz2
cd parallel-$YYYYMMDD
./configure
make -j && sudo make -j install
pushd
sudo cp /usr/local/bin/parallel /usr/local/bin/parallel-$YYYYMMDD

== Update website ==

http://www.gnu.org/software/parallel/
http://www.gnu.org/software/parallel/man.html
http://www.gnu.org/software/parallel/sql.html
http://www.gnu.org/software/parallel/sem.html
http://www.gnu.org/software/parallel/env_parallel.html
http://www.gnu.org/software/parallel/parset.html
http://www.gnu.org/software/parallel/parcat.html
http://www.gnu.org/software/parallel/niceload.html

cp src/*.pdf src/*.html  ../parallel-web/parallel
cp src/parallel.html  ../parallel-web/parallel/man.html

pushd ../parallel-web/parallel
cvs up
cvs ci -m "New release"
pushd

== Commit released version ==

git diff

# Recheck OBS https://build.opensuse.org/package/show?package=parallel&project=home%3Atange

YYYYMMDD=`yyyymmdd`
TAG=MyTag
echo "Released as $YYYYMMDD ('$TAG')." | grep MyTag && (STOP;STOP;STOP)

git commit -a -m "Released as $YYYYMMDD ('$TAG')"
git tag -s -u 88888888 -m "Released as $YYYYMMDD ('$TAG')" $TAG
git tag -s -u 88888888 -m "Released as $YYYYMMDD ('$TAG')" $YYYYMMDD

git push
git push origin $TAG
git push origin $YYYYMMDD

== Update documentation ==

Update version number + 1

YYYYMMDD=$(echo `yyyymmdd`+1 | bc)
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/parallel
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/sql
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/niceload

Unmodified beta since last version => production
Unmodified alpha since last version => beta
Modified => alpha

== Update Savannah ==

file:///home/tange/privat/parallel/doc/release_new_version

Content from release mail:

https://savannah.gnu.org/news/submit.php?group=parallel

Test URLs.

https://savannah.gnu.org/news/approve.php?group=parallel

== Update Freshmeat ==

// FreeCode is dying
http://freshmeat.net/projects/parallel/releases/new

== Update Diaspora Twitter ==

https://joindiaspora.com/stream

New release of #GNU Parallel pi․dk/0 New in this release pi․dk/2 See the intro videos pi․dk/1
10 secs installation: wget -O - pi․dk/3|bash

[x] Twitter
Aspect: Public

GNU Parallel - for people who live life in the parallel lane.

== Send announce ==

http://groups.google.com/group/comp.unix.shell/post
http://groups.google.com/group/comp.unix.admin/post

https://lists.gnu.org/mailman/admindb/bug-parallel
https://lists.gnu.org/mailman/admindb/parallel

<<<<<
file:///home/tange/privat/parallel/doc/release_new_version

from:tange@gnu.org
to:parallel@gnu.org, bug-parallel@gnu.org

Subject: GNU Parallel 20170522 ('Macron') released [stable]

GNU Parallel 20170522 ('Macron') [stable] has been released. It is available for download at: http://ftpmirror.gnu.org/parallel/

Very little new functionality was introduced so this is a good candidate for a stable release.>>

Haiku of the month:

  Always test your script
  using a --dry-run
  or --dr
    -- Ole Tange 

New in this release:

* --timeout can now use s=second,m=minute,h=hour,d=day.

* --dr is now an alias for --dry-run.

* Vote for GNU Parallel's community ads on http://meta.unix.stackexchange.com/a/4356/2972 http://meta.askubuntu.com/a/16750/22307 http://meta.serverfault.com/a/9040/45704

* GNU Parallel was cited in: Feature Detection in Visual Cortex during Different Functional States https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5397493/

* GNU Parallel was cited in: From genotype to phenotype: inferring relationships between microbial traits and genomic components https://docserv.uni-duesseldorf.de/servlets/DerivateServlet/Derivate-44622/main.pdf

* GNU Parallel was cited in: Designing fecal microbiota transplant trials that account for differences in donor stool efficacy http://biorxiv.org/content/biorxiv/early/2016/07/25/065383.full.pdf

* GNU Parallel was cited in: Assessing the predictability of anharmonic vibrational modes at the example of hydroxyl groups - ad hoc construction of localised modes and the influence of structural solute–solvent motifs http://pubs.rsc.org/-/content/articlelanding/2017/cp/c7cp01662j#!divAbstract

* GNU Parallel was cited in: Mapping Environmental Influences on Utility Fire Threat ftp://frapftp.fire.ca.gov/outgoing/transfer/PUC_Map1/Utility%20Fire%20map%201%20final%20review%20and%20development%20report21616.pdf

* GNU Parallel was cited in: Weak vs. Strong Disorder Superfluid-Bose Glass Transition in One Dimension https://arxiv.org/pdf/1704.02257.pdf

* GNU Parallel was cited in: Online Automatic Post-editing for MT in a Multi-Domain Translation Environment https://www.aclweb.org/anthology/E/E17/E17-1050.pdf

* GNU Parallel was cited in: Cross-calibration of S-NPP VIIRS moderate-resolution reflective solar bands against MODIS Aqua over dark water scenes http://www.atmos-meas-tech.net/10/1425/2017/amt-10-1425-2017.pdf

* GNU Parallel was cited in: Scattering Networks: Efficient 2D Implementation And Application To Melanoma Classification http://amslaurea.unibo.it/12261/1/nurrito_eugenio_tesi_fisica_magistrale.pdf

* GNU Parallel was cited in: Genome-scale detection of positive selection in 9 primates predicts human-virus evolutionary conflicts http://biorxiv.org/content/biorxiv/early/2017/04/27/131680.full.pdf

* GNU Parallel is used in: Creates a speech dataset for deep learning https://github.com/jupiter126/Create_Speech_Dataset

* GNU Parallel is used in: Parse and process the demixing secrets dataset (DSD100) https://github.com/faroit/dsdtools

* First glance at the gnu parallel utility https://ibiscybernetics.com/blog/2017-04-05.html

* Installing parallel from source https://bitsanddragons.wordpress.com/2017/05/03/installing-parallel-from-source/

* How to run command or code in parallel in bash shell under Linux or Unix https://www.cyberciti.biz/faq/how-to-run-command-or-code-in-parallel-in-bash-shell-under-linux-or-unix/

* Parallel Serial Jobs Using GNU Parallel http://www.hpc.lsu.edu/training/weekly-materials/2017-Spring/gnuparallel-Feb2017.pdf

* GNU Parallel or How to list millions of S3 objects https://joeray.me/gnu-parallel-how-to-list-millions-objects.html

* Which Is the Best Tool for Copying a Large Directory Tree Locally? http://arjon.es/2017/05/11/which-is-the-best-tool-for-copying-a-large-directory-tree-locally/

<<Down https://springerplus.springeropen.com/articles/10.1186/s40064-016-2022-y>>

<<Down http://www.nature.com/nprot/journal/v12/n5/full/nprot.2017.022.html?WT.feed_name=subjects_biotechnology>>

<<Citation not ok: https://arxiv.org/pdf/1704.08997.pdf>>

<<Probably http://www.sciencedirect.com/science/article/pii/S0044848616312194>>

<<Citation needed: https://sdstrowes.co.uk/publications/sdstrowes-rdns-aaaa.pdf>>

<<Citation not ok: https://www.nature.com/articles/s41598-017-01703-6>>

<<Possibly http://link.springer.com/chapter/10.1007%2F978-3-319-22053-6_46>>

<<Possibly http://link.springer.com/article/10.1007/s12021-015-9290-5>>

<<Possibly http://link.springer.com/protocol/10.1007/978-1-4939-3578-9_14>>

<< kontakt GNU Parallel was used (unfortunately without citation) in: Instrumentation and Trace Analysis for Ad-hoc Python Workflows in Cloud Environments http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=7214035>>

<<Har angiveligt submittet ny version - afventer opdatering>> GNU Parallel was used (unfortunately without citation) in: MUGBAS: a species free gene-based programme suite for post-GWAS analysis http://www.ncbi.nlm.nih.gov/pubmed/25765345

<<Afventer updateret publisering>> GNU Parallel was used in: Large Scale Author Name Disambiguation in Digital Libraries http://ieeexplore.ieee.org/xpl/abstractReferences.jsp?tp=&arnumber=7004487&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D7004487

<<kontaktet 2015-06-22 Afventer svar fra journal>> GNU Parallel was used (unfortunately with wrong citation) in: TADSim: Discrete Event-Based Performance Prediction for Temperature-Accelerated Dynamics http://vruehle.de/publications/2015c.pdf
http://www.researchgate.net/profile/Christoph_Junghans/publication/276178326_TADSim_Discrete_Event-Based_Performance_Prediction_for_Temperature-Accelerated_Dynamics/links/55562b6708ae980ca60c8369.pdf

<< Update forventet juni Rachel har lige svaret >> GNU Parallel was used in: SISRS: Site Identification from Short Read Sequences https://github.com/rachelss/SISRS/

<<Citation needed: A Cache- and Memory-Aware Mapping Algorithm
for Big Data Applications https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7323015>>

<<Citation needed: Introspecting for RSA Key Material to Assist Intrusion Detection http://ieeexplore.ieee.org/xpl/login.jsp?tp=&arnumber=7331177&url=http%3A%2F%2Fieeexplore.ieee.org%2Fxpls%2Fabs_all.jsp%3Farnumber%3D7331177>>

<<Citation needed: 3D-GNOME: an integrated web service for structural modeling of the 3D genome http://nar.oxfordjournals.org/content/early/2016/05/16/nar.gkw437.full.pdf+html>>

<<link No citation: Next-generation TCP for ns-3 simulator http://www.sciencedirect.com/science/article/pii/S1569190X15300939>>

<<link No citation: Scalable metagenomics alignment research tool (SMART): a scalable, rapid, and complete search heuristic for the classification of metagenomic sequences from complex sequence populations http://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-016-1159-6#Bib1>>

<<No citation: Argumentation Models for Cyber Attribution http://arxiv.org/pdf/1607.02171.pdf>>

<<Possible: http://link.springer.com/article/10.1007/s12021-015-9290-5 http://link.springer.com/protocol/10.1007/978-1-4939-3578-9_14>>

* Bug fixes and man page updates.

GNU Parallel - For people who live life in the parallel lane.


= About GNU Parallel =

GNU Parallel is a shell tool for executing jobs in parallel using one or more computers. A job can be a single command or a small script that has to be run for each of the lines in the input. The typical input is a list of files, a list of hosts, a list of users, a list of URLs, or a list of tables. A job can also be a command that reads from a pipe. GNU Parallel can then split the input and pipe it into commands in parallel.

If you use xargs and tee today you will find GNU Parallel very easy to use as GNU Parallel is written to have the same options as xargs. If you write loops in shell, you will find GNU Parallel may be able to replace most of the loops and make them run faster by running several jobs in parallel. GNU Parallel can even replace nested loops.

GNU Parallel makes sure output from the commands is the same output as you would get had you run the commands sequentially. This makes it possible to use output from GNU Parallel as input for other programs.

You can find more about GNU Parallel at: http://www.gnu.org/s/parallel/

You can install GNU Parallel in just 10 seconds with: (wget -O - pi.dk/3 || curl pi.dk/3/) | bash

Watch the intro video on http://www.youtube.com/playlist?list=PL284C9FF2488BC6D1

Walk through the tutorial (man parallel_tutorial). Your commandline will love you for it.

When using programs that use GNU Parallel to process data for publication please cite:

O. Tange (2011): GNU Parallel - The Command-Line Power Tool, ;login: The USENIX Magazine, February 2011:42-47.

If you like GNU Parallel:

* Give a demo at your local user group/team/colleagues
* Post the intro videos on Reddit/Diaspora*/forums/blogs/ Identi.ca/Google+/Twitter/Facebook/Linkedin/mailing lists
* Get the merchandise https://www.gnu.org/s/parallel/merchandise.html
* Request or write a review for your favourite blog or magazine
* Request or build a package for your favourite distribution (if it is not already there)
* Invite me for your next conference

If you use programs that use GNU Parallel for research:

* Please cite GNU Parallel in you publications (use --citation)

If GNU Parallel saves you money:

* (Have your company) donate to FSF https://my.fsf.org/donate/


= About GNU SQL =

GNU sql aims to give a simple, unified interface for accessing databases through all the different databases' command line clients. So far the focus has been on giving a common way to specify login information (protocol, username, password, hostname, and port number), size (database and table size), and running queries.

The database is addressed using a DBURL. If commands are left out you will get that database's interactive shell.

When using GNU SQL for a publication please cite:

O. Tange (2011): GNU SQL - A Command Line Tool for Accessing Different Databases Using DBURLs, ;login: The USENIX Magazine, April 2011:29-32.


= About GNU Niceload =

GNU niceload slows down a program when the computer load average (or other system activity) is above a certain limit. When the limit is reached the program will be suspended for some time. If the limit is a soft limit the program will be allowed to run for short amounts of time before being suspended again. If the limit is a hard limit the program will only be allowed to run when the system is below the limit.
