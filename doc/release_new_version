# SPDX-FileCopyrightText: 2021 Ole Tange, http://ole.tange.dk and Free Software and Foundation, Inc.
# SPDX-License-Identifier: GFDL-1.3-or-later
# SPDX-License-Identifier: CC-BY-SA-4.0

= Notes on how to release new version =

== alpha/beta/production ==

Check that documentation is updated (compare to web):

git grep -E '(alpha|beta) testing' | cat
git diff $(date --date="last month" +%Y%m22)
Unmodified beta since last version => production
Unmodified alpha since last version => beta
Modified => alpha

== Update NEWS ==

With the same things that goes in the announce mail

== Testsuite ==

Start termux on Android
Start: wssh mac ping fi.dk
cd testsuite; make mem; make

== Update version ==

https://zenodo.org/deposit/new

(*) Software
(Reserve DOI)
GNU Parallel 20xxxx22 ('Xxxx')
Tange, Ole
https://orcid.org/0000-0002-6345-1437
Description
GNU Parallel is a general parallelizer to run multiple serial command line programs in parallel without changing them.

License:
gpl v3

[Save]


10.5281/zenodo.4381888
DOINO=3956817
SPCTAG='Privacy Shield'

# Update version
. packager/releasescripts/updateversion

# Load doi+tag in other window
. .last-doitag.txt

=== Reconfig autoconf/automake, build tar.bz2 and test it ===

. .last-doitag.txt
make reconf &&
make pack_unpack_and_test_build

== Upload ==

. .last-doitag.txt
eval `gpg-agent --daemon`
# Takes up to 8 minutes
make upload

# Only needed for alpha:
. .last-doitag.txt
eval `gpg-agent --daemon`
# Takes up to 8 minutes
make alphaupload

== Update OpenSUSE build system ==

. .last-doitag.txt
cd ~/privat/parallel/packager/obs

find home:tange/parallel/* -type f |
  grep -Ev '(PKGBUILD|parallel.spec)' |
  parallel -j1 'osc rm {} || rm {}'
# This should not create new files
osc up home:tange/parallel/
make
# Reload build-status:
https://build.opensuse.org/package/show/home:tange/parallel
# Check that one .deb (Debian 5.0) and one .rpm (CentOS) end with 'succeeded'

== Upload LBRY ==

lbry://@GnuParallel#4/parallel-20210322.tar.bz2

An easy way to support GNU Parallel is to tip on LBRY.

:

If you like GNU Parallel record a video testimonial: Say who you are, what you use GNU Parallel for, how it helps you, and what you like most about it. Include a command that uses GNU Parallel if you feel like it.

Thumbnail: https://www.gnu.org/software/parallel/logo-gray+black10000.png

Tags: gnu parallel software


file_path="parallel-20210622.tar.bz2"
title="GNU Parallel $YYYYMMDD ('$SPCTAG') [stable]"
name="GNU-Parallel-$YYYYMMDD-$SPCTAG"
author="Ole Tange"
license="GNU GPLv3 or later"
thumbnail_url=https://www.gnu.org/software/parallel/logo-gray+black10000.png
channel_name="@GnuParallel"
tags_opt='--tag gnu --tag parallel --tag free --tag software'
description="An easy way to support GNU Parallel is to tip on LBRY.

GNU Parallel 20210622 ('Protasevich') [stable] has been released. It is available for download at: lbry://@GnuParallel:4

No new functionality was introduced so this is a good candidate for a stable release.

Please help spreading GNU Parallel by making a testimonial video like Juan Sierra Pons: http://www.elsotanillo.net/wp-content/uploads/GnuParallel_JuanSierraPons.mp4

It does not have to be as detailed as Juan's. It is perfectly fine if you just say your name, and what field you are using GNU Parallel for.

Quote of the month:

  GNU Parallel makes my life so much easier.
  I'm glad I don't have to implement multi-threaded Python scripts on the regular.
     -- Fredrick Brennan @fr_brennan@twitter
  
New in this release:

* Bug fixes and man page updates.

News about GNU Parallel:

* How to use GNU Parallel https://techtipbits.com/linux/how-to-use-gnu-parallel/

* How to Speed Up Bash Scripts with Multithreading and GNU Parallel https://adamtheautomator.com/how-to-speed-up-bash-scripts-with-multithreading-and-gnu-parallel/

* Use Parallel to split by line https://madflex.de/use-parallel-to-split-by-line/

* Optimizing long batch processes or ETL by using buff/cache properly II (parallelizing network operations) http://www.elsotanillo.net/2021/06/optimizing-long-batch-processes-or-etl-by-using-buff-cache-properly-ii-parallelizing-network-operations/

* Parallelization 3: GNU Parallel https://www.youtube.com/watch?v=Rl06WD60afA

Get the book: GNU Parallel 2018 http://www.lulu.com/shop/ole-tange/gnu-parallel-2018/paperback/product-23558902.html

GNU Parallel - For people who live life in the parallel lane.

If you like GNU Parallel record a video testimonial: Say who you are, what you use GNU Parallel for, how it helps you, and what you like most about it. Include a command that uses GNU Parallel if you feel like it.
"


lbrynet publish \
  --bid=0.01 \
  --file_path="$file_path" \
  --name="$name" \
  --title="$title" \
  --description="$description" \
  --author="$author" \
  $languages_opt \
  $tags_opt \
  --license="$license" \
  --thumbnail_url="$thumbnail_url" \
  --channel_name="$channel_name" \

  --release_time="$release_time" \

== Update website ==

http://www.gnu.org/software/parallel/
http://www.gnu.org/software/parallel/man.html
http://www.gnu.org/software/parallel/sql.html
http://www.gnu.org/software/parallel/sem.html
http://www.gnu.org/software/parallel/env_parallel.html
http://www.gnu.org/software/parallel/parcat.html
http://www.gnu.org/software/parallel/parset.html
http://www.gnu.org/software/parallel/parsort.html
http://www.gnu.org/software/parallel/niceload.html

cp src/*.pdf src/*.html  ../parallel-web/parallel
cp src/parallel.html  ../parallel-web/parallel/man.html

pushd ../parallel-web/parallel
# Bug at Savannah makes this take 30 seconds
(cd ..;
 torsocks cvs -z3 -d:ext:tange@cvs.savannah.gnu.org:/web/parallel co parallel)
torsocks cvs up
torsocks cvs ci -m "New release"
pushd

== Commit released version ==

git diff

# Recheck OBS https://build.opensuse.org/package/show/home:tange/parallel

. .last-doitag.txt
echo "Released as $YYYYMMDD ('$TAG')." | grep MyTag && (STOP;STOP;STOP)
echo "$TAG" | grep ' ' && (STOP;STOP;STOP)
echo "Released as $YYYYMMDD ('$SPCTAG')."

git commit -a -m "Released as $YYYYMMDD ('$SPCTAG')"
git tag -s -u 88888888 -m "Released as $YYYYMMDD ('$SPCTAG')" $TAG
git tag -s -u 88888888 -m "Released as $YYYYMMDD ('$SPCTAG')" $YYYYMMDD

torsocks git push
torsocks git push origin $TAG
torsocks git push origin $YYYYMMDD

== Zenodo ==

Add tar.bz2 [Start upload] and [Publish].

== Update documentation ==

Update version number + 1

export YYYYMMDD=`yyyymmdd`
export YYYYMMDD=${YYYYMMDD:0:6}23
echo $YYYYMMDD
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/parallel
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/sql
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/env_parallel*
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/parsort
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/niceload

Unmodified beta since last version => production
Unmodified alpha since last version => beta
Modified => alpha


== Check URLs ==

make testurls

== Check REUSE ==

make reuse

https://api.reuse.software/info/git.savannah.gnu.org/git/parallel
https://api.reuse.software/status/git.savannah.gnu.org/git/parallel

== Update Savannah ==

file:///home/tange/privat/parallel/doc/release_new_version

Content from release mail:

https://savannah.gnu.org/news/submit.php?group=parallel

Test URLs.

https://savannah.gnu.org/news/approve.php?group=parallel

== Update Freshmeat ==

// FreeCode is dying
http://freshmeat.net/projects/parallel/releases/new

== Update Diaspora Twitter ==

https://joindiaspora.com/stream

New release of #GNU Parallel pi.dk/0 New in this release pi.dk/2 See the intro videos pi.dk/1
10 secs installation: wget -O - pi.dk/3|bash

[x] Twitter
Aspect: Public

GNU Parallel - for people who live life in the parallel lane.

== Send announce ==

http://groups.google.com/group/comp.unix.shell/post
http://groups.google.com/group/comp.unix.admin/post

https://lists.gnu.org/mailman/admindb/bug-parallel
https://lists.gnu.org/mailman/admindb/parallel

file:///home/tange/privat/parallel/doc/release_new_version

For codename look at https://www.onthisday.com/

from:tange@gnu.org
to:parallel@gnu.org, bug-parallel@gnu.org
stable-bcc: Jesse Alama <jessealama@fastmail.fm>

Subject: GNU Parallel 20210622 ('Protasevich') released <<[stable]>>

GNU Parallel 20210622 ('Protasevich') <<[stable]>> has been released. It is available for download at: lbry://@GnuParallel:4

<<No new functionality was introduced so this is a good candidate for a stable release.>>

Please help spreading GNU Parallel by making a testimonial video like Juan Sierra Pons: http://www.elsotanillo.net/wp-content/uploads/GnuParallel_JuanSierraPons.mp4

It does not have to be as detailed as Juan's. It is perfectly fine if you just say your name, and what field you are using GNU Parallel for.

Quote of the month:

  GNU Parallel makes my life so much easier.
  I'm glad I don't have to implement multi-threaded Python scripts on the regular.
     -- Fredrick Brennan @fr_brennan@twitter
  <<>>
  
New in this release:

* Bug fixes and man page updates.

News about GNU Parallel:

* How to use GNU Parallel https://techtipbits.com/linux/how-to-use-gnu-parallel/

* How to Speed Up Bash Scripts with Multithreading and GNU Parallel https://adamtheautomator.com/how-to-speed-up-bash-scripts-with-multithreading-and-gnu-parallel/

* Use Parallel to split by line https://madflex.de/use-parallel-to-split-by-line/

* Optimizing long batch processes or ETL by using buff/cache properly II (parallelizing network operations) http://www.elsotanillo.net/2021/06/optimizing-long-batch-processes-or-etl-by-using-buff-cache-properly-ii-parallelizing-network-operations/

* Parallelization 3: GNU Parallel https://www.youtube.com/watch?v=Rl06WD60afA


<<>>

Get the book: GNU Parallel 2018 http://www.lulu.com/shop/ole-tange/gnu-parallel-2018/paperback/product-23558902.html

GNU Parallel - For people who live life in the parallel lane.

If you like GNU Parallel record a video testimonial: Say who you are, what you use GNU Parallel for, how it helps you, and what you like most about it. Include a command that uses GNU Parallel if you feel like it.


= About GNU Parallel =

GNU Parallel is a shell tool for executing jobs in parallel using one or more computers. A job can be a single command or a small script that has to be run for each of the lines in the input. The typical input is a list of files, a list of hosts, a list of users, a list of URLs, or a list of tables. A job can also be a command that reads from a pipe. GNU Parallel can then split the input and pipe it into commands in parallel.

If you use xargs and tee today you will find GNU Parallel very easy to use as GNU Parallel is written to have the same options as xargs. If you write loops in shell, you will find GNU Parallel may be able to replace most of the loops and make them run faster by running several jobs in parallel. GNU Parallel can even replace nested loops.

GNU Parallel makes sure output from the commands is the same output as you would get had you run the commands sequentially. This makes it possible to use output from GNU Parallel as input for other programs.

For example you can run this to convert all jpeg files into png and gif files and have a progress bar:

  parallel --bar convert {1} {1.}.{2} ::: *.jpg ::: png gif

Or you can generate big, medium, and small thumbnails of all jpeg files in sub dirs:

  find . -name '*.jpg' |
    parallel convert -geometry {2} {1} {1//}/thumb{2}_{1/} :::: - ::: 50 100 200

You can find more about GNU Parallel at: http://www.gnu.org/s/parallel/

You can install GNU Parallel in just 10 seconds with:

    $ (wget -O - pi.dk/3 || lynx -source pi.dk/3 || curl pi.dk/3/ || \
       fetch -o - http://pi.dk/3 ) > install.sh
    $ sha1sum install.sh | grep c82233e7da3166308632ac8c34f850c0
    12345678 c82233e7 da316630 8632ac8c 34f850c0
    $ md5sum install.sh | grep ae3d7aac5e15cf3dfc87046cfc5918d2
    ae3d7aac 5e15cf3d fc87046c fc5918d2
    $ sha512sum install.sh | grep dfc00d823137271a6d96225cea9e89f533ff6c81f
    9c5198d5 31a3b755 b7910ece 3a42d206 c804694d fc00d823 137271a6 d96225ce
    a9e89f53 3ff6c81f f52b298b ef9fb613 2d3f9ccd 0e2c7bd3 c35978b5 79acb5ca
    $ bash install.sh

Watch the intro video on http://www.youtube.com/playlist?list=PL284C9FF2488BC6D1

Walk through the tutorial (man parallel_tutorial). Your command line will love you for it.

When using programs that use GNU Parallel to process data for publication please cite:

O. Tange (2018): GNU Parallel 2018, March 2018, https://doi.org/10.5281/zenodo.1146014.

If you like GNU Parallel:

* Give a demo at your local user group/team/colleagues
* Post the intro videos on Reddit/Diaspora*/forums/blogs/ Identi.ca/Google+/Twitter/Facebook/Linkedin/mailing lists
* Get the merchandise https://gnuparallel.threadless.com/designs/gnu-parallel
* Request or write a review for your favourite blog or magazine
* Request or build a package for your favourite distribution (if it is not already there)
* Invite me for your next conference

If you use programs that use GNU Parallel for research:

* Please cite GNU Parallel in you publications (use --citation)

If GNU Parallel saves you money:

* (Have your company) donate to FSF https://my.fsf.org/donate/


= About GNU SQL =

GNU sql aims to give a simple, unified interface for accessing databases through all the different databases' command line clients. So far the focus has been on giving a common way to specify login information (protocol, username, password, hostname, and port number), size (database and table size), and running queries.

The database is addressed using a DBURL. If commands are left out you will get that database's interactive shell.

When using GNU SQL for a publication please cite:

O. Tange (2011): GNU SQL - A Command Line Tool for Accessing Different Databases Using DBURLs, ;login: The USENIX Magazine, April 2011:29-32.


= About GNU Niceload =

GNU niceload slows down a program when the computer load average (or other system activity) is above a certain limit. When the limit is reached the program will be suspended for some time. If the limit is a soft limit the program will be allowed to run for short amounts of time before being suspended again. If the limit is a hard limit the program will only be allowed to run when the system is below the limit.
