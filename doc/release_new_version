= Notes on how to release new version =

== Update version ==

=== configure.ac ===
configure.ac: AC_INIT([parallel], [20100422], [bug-parallel@gnu.org])

YYYYMMDD=`yyyymmdd`
perl -i -pe "s/20\d\d\d\d\d\d/$YYYYMMDD/" configure.ac

=== src/parallel ===

src/parallel: $Global::version = 20100422;

YYYYMMDD=`yyyymmdd`
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/parallel

=== directive file for ftp ===

YYYYMMDD=`yyyymmdd`
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" parallel-*.tar.*directive.asc

== Autoconf/automake ==

rm -fr autom4te.cache aclocal.m4 config.h config.h.in config.log Makefile.in missing install-sh
rm -rf src/Makefile.in
autoreconf --install -W gnu
./configure
make

== Unittest ==

cd unittest; make unittest

== Package ==

./configure
make dist
make bzip2-dist

== Upload ==

YYYYMMDD=`yyyymmdd`
cp doc/parallel-directive.asc parallel-$YYYYMMDD.tar.bz2.directive
perl -i -pe "s/20\d\d\d\d\d\d/$YYYYMMDD/" parallel-*.tar.*directive
gpg --clearsign parallel-*.tar.*directive

YYYYMMDD=`yyyymmdd`
gpg -b parallel-$YYYYMMDD.tar.bz2

YYYYMMDD=`yyyymmdd`
echo put parallel-$YYYYMMDD.tar.bz2{,.sig,*asc} | ncftp ftp://ftp-upload.gnu.org/incoming/ftp/

YYYYMMDD=`yyyymmdd`
echo put parallel-$YYYYMMDD.tar.bz2{,.sig,*asc} | ncftp ftp://ftp-upload.gnu.org/incoming/alpha/

== Update web ==

pod2html src/parallel > ../parallel-web/parallel/man.html
cd ../parallel-web
cvs ci

doc/pod2savannah_publicinfo src/parallel | klipper-stdin
https://savannah.gnu.org/project/admin/editgroupinfo.php?group=parallel

== Announce release ==

News on Savannah: https://savannah.gnu.org/news/submit.php?group=parallel
Email to: parallel@gnu.org, bug-parallel@gnu.org, <info-gnu@gnu.org>, <bug-directory@gnu.org>

<_EMAIL_>
Subject: GNU Parallel <<version>> released
GNU Parallel <<version>> has been released today. It is available for
download at: http://ftp.gnu.org/gnu/parallel/

New in this release:

* GNU Parallel is now official GNU software

= About GNU Parallel =

GNU Parallel is a shell tool for executing jobs in parallel. A job is
typically a single command or a small script that has to be run for
each of the lines in the input. The typical input is a list of files,
a list of hosts, a list of users, or a list of tables.

If you use xargs today you will find GNU Parallel very easy to use. If
you write loops in shell, you will find GNU Parallel may be able to
replace most of the loops and make them run faster by running jobs in
parallel. If you use ppss or pexec you will find GNU Parallel will
often make the command easier to read.

GNU Parallel makes sure output from the commands is the same output as
you would get had you run the commands sequentially. This makes it
possible to use output from GNU Parallel as input for other programs.

You can find more about GNU Parallel at:
http://www.gnu.org/software/parallel/
</_EMAIL_>
