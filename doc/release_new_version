= Notes on how to release new version =

== Update version ==

=== configure.ac ===
configure.ac: AC_INIT([parallel], [20100422], [bug-parallel@gnu.org])

YYYYMMDD=`yyyymmdd`
perl -i -pe "s/20\d\d\d\d\d\d/$YYYYMMDD/" configure.ac

=== src/parallel ===

src/parallel: $Global::version = 20100422;

YYYYMMDD=`yyyymmdd`
perl -i -pe "/version/ and s/20\d\d\d\d\d\d/$YYYYMMDD/" src/parallel

=== Autoconf/automake ===

rm -fr autom4te.cache aclocal.m4 config.h config.h.in config.log Makefile.in missing install-sh
rm -rf src/Makefile.in
autoreconf --install -W gnu
./configure
make && sudo make install

== Unittest ==

cd unittest; make unittest

== Package ==

./configure
make dist
make dist-bzip2

== Upload ==

YYYYMMDD=`yyyymmdd`
cp doc/parallel.directive parallel-$YYYYMMDD.tar.bz2.directive
perl -i -pe "s/20\d\d\d\d\d\d/$YYYYMMDD/" parallel-*.tar.*directive
gpg --clearsign parallel-$YYYYMMDD.tar.bz2.directive

YYYYMMDD=`yyyymmdd`
gpg -b parallel-$YYYYMMDD.tar.bz2

YYYYMMDD=`yyyymmdd`
echo put parallel-$YYYYMMDD.tar.bz2{,.sig,*asc} | ncftp ftp://ftp-upload.gnu.org/incoming/ftp/

== Update Savannah ==

https://savannah.gnu.org/news/submit.php?group=parallel

doc/pod2savannah_publicinfo src/parallel | klipper-stdin
https://savannah.gnu.org/project/admin/editgroupinfo.php?group=parallel

== Update website ==

http://www.gnu.org/software/parallel/
http://www.gnu.org/software/parallel/man.html

pod2html src/parallel > ../parallel-web/parallel/man.html
cvs ci

== Update Freshmeat ==

http://freshmeat.net/projects/parallel/releases/new

== Send announce ==

http://groups.google.com/group/comp.unix.shell/post
Newsgroups: comp.unix.shell,comp.unix.admin

<<<<<
to:parallel@gnu.org, bug-parallel@gnu.org, info-gnu@gnu.org, bug-directory@gnu.org

Subject: GNU Parallel 20100620 released

GNU Parallel 20100620 has been released. It is available for
download at: http://ftp.gnu.org/gnu/parallel/

New in this release:

* New video showing the new options.
  http://www.youtube.com/watch?v=OpaiGYxkSuQ

* 100% options complete with xargs. All options for xargs can now
  be used in GNU Parallel - even the more exotic.

* --basefile for transferring basedata. When running jobs on remote
  computers --basefile will transfer files before the first jobs is
  run. It can be used to transfer data that remains the same for each
  job such as scripts or lookup tables.

* --progress shows progress. To see how many jobs is running on each
  server use --progress. It can be turned on even after GNU Parallel
  is started.

* --eta shows estimated time left in seconds.

* --halt-on-error stops if an error occurs. GNU Parallel will default
  to run all jobs - even if some of them fail. With --halt-on-error
  GNU Parallel can ignore errors, wait for the currently running jobs
  to finish, or stop immediately when an error occurs.


= About GNU Parallel =

GNU Parallel is a shell tool for executing jobs in parallel using one
or more machines. A job is typically a single command or a small
script that has to be run for each of the lines in the input. The
typical input is a list of files, a list of hosts, a list of users, a
list of URLs, or a list of tables.

If you use xargs today you will find GNU Parallel very easy to use as
GNU Parallel is written to have the same options as xargs. If you
write loops in shell, you will find GNU Parallel may be able to
replace most of the loops and make them run faster by running several
jobs in parallel. If you use ppss or pexec you will find GNU Parallel
will often make the command easier to read.

GNU Parallel makes sure output from the commands is the same output as
you would get had you run the commands sequentially. This makes it
possible to use output from GNU Parallel as input for other programs.

You can find more about GNU Parallel at:
http://www.gnu.org/software/parallel/

Watch the intro video on http://www.youtube.com/watch?v=OpaiGYxkSuQ

>>>>>
